<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.devzendo</groupId>
    <artifactId>transputer-emulator</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Transputer Emulator</name>
    <description>This is an emulator of the 32-bit Inmos T414/T800/T801/T805 Transputer family, and a Node Server that
        interfaces it to a host OS, providing boot/debug/IO facilities.
        (Apache License v2) 2005-2019 Matt Gumbley, DevZendo.org
    </description>
    <url>https://devzendo.github.io/parachute</url>

    <organization>
        <name>DevZendo.org</name>
        <url>http://devzendo.org/</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>https://bitbucket.org/devzendo/transputer-emulator/</url>
        <connection>scm:hg:https://bitbucket.org/devzendo/transputer-emulator/</connection>
        <developerConnection>scm:hg:https://bitbucket.org/devzendo/transputer-emulator/</developerConnection>
    </scm>
    <developers>
        <developer>
            <id>matt.gumbley</id>
            <name>Matt Gumbley</name>
            <email>matt.gumbley@devzendo.org</email>
        </developer>
    </developers>

    <properties>
        <cmake.binary.dir>cmake-build-debug</cmake.binary.dir>
        <download.cmake>false</download.cmake>
    </properties>

    <!-- use mvn enforcer:display-info to find platform name/family values -->
    <profiles>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <name>linux</name>
                </os>
            </activation>
            <properties>
                <!-- The CMake maven plugin understands cmake.root.dir -->
                <cmake.root.dir>/opt/cmake</cmake.root.dir>

                <!-- One of the generators defined at https://cmake.org/cmake/help/v3.7/manual/cmake-generators.7.html -->
                <cmake.generator>Unix Makefiles</cmake.generator>
                <!-- The classifier of the current platform. One of [windows-x86_32, windows-x86_64, linux-x86_32, linux-x86_64, linux-arm_32, mac-x86_64]. -->
                <cmake.classifier>linux-x86_64</cmake.classifier>

                <install.dir>/opt/parachute</install.dir>
                <binary.suffix></binary.suffix>
            </properties>
            <build>
            </build>
        </profile>
        <profile>
            <id>macosx</id>
            <activation>
                <os>
                    <name>mac os x</name>
                </os>
            </activation>
            <properties>
                <!-- The CMake maven plugin understands cmake.root.dir -->
                <cmake.root.dir>/opt/local</cmake.root.dir>

                <!-- These are two of my properties I pass in to the CMake plugin, they're not known by the plugin innately -->
                <!-- One of the generators defined at https://cmake.org/cmake/help/v3.7/manual/cmake-generators.7.html -->
                <cmake.generator>Unix Makefiles</cmake.generator>
                <!-- The classifier of the current platform. One of [windows-x86_32, windows-x86_64, linux-x86_32, linux-x86_64, linux-arm_32, mac-x86_64]. -->
                <cmake.classifier>mac-x86_64</cmake.classifier>

                <install.dir>/opt/parachute</install.dir>
                <binary.suffix></binary.suffix>
            </properties>
            <build>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <!-- The CMake maven plugin understands cmake.root.dir -->
                <cmake.root.dir>C:/Program Files/CMake</cmake.root.dir>

                <!-- These are two of my properties I pass in to the CMake plugin, they're not known by the plugin innately -->
                <!-- One of the generators defined at https://cmake.org/cmake/help/v3.7/manual/cmake-generators.7.html -->
                <cmake.generator>NMake Makefiles</cmake.generator>
                <!-- The classifier of the current platform. One of [windows-x86_32, windows-x86_64, linux-x86_32, linux-x86_64, linux-arm_32, mac-x86_64]. -->
                <cmake.classifier>windows-x86_64</cmake.classifier>

                <install.dir>C:/parachute</install.dir>
                <binary.suffix>.exe</binary.suffix>
            </properties>
            <build>
            </build>
        </profile>

        <profile>
            <id>local-install</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>copy-scripts-and-config</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${install.dir}"/>
                                        <mkdir dir="${install.dir}/bin"/>

                                        <copy file="${cmake.binary.dir}/Emulator/temulate${binary.suffix}"
                                              todir="${install.dir}/bin"/>
                                        <chmod file="${install.dir}/bin/temulate${binary.suffix}" perm="755" />

                                        <copy file="${cmake.binary.dir}/NodeServer/server/nodeserver${binary.suffix}"
                                              todir="${install.dir}/bin"/>
                                        <chmod file="${install.dir}/bin/nodeserver${binary.suffix}" perm="755" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${cmake.binary.dir}</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Generate the target/classes/version.cpp file that CMakeLists.txt picks up -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.googlecode.cmake-maven-project</groupId>
                <artifactId>cmake-maven-plugin</artifactId>
                <version>3.7.2-b1</version>
                <executions>
                    <!-- Generate the CMake cache/binary build dir -->
                    <execution>
                        <id>cmake-generate</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <sourcePath>${project.basedir}</sourcePath>
                            <targetPath>${project.basedir}/${cmake.binary.dir}</targetPath>
                            <generator>${cmake.generator}</generator>
                            <classifier>${cmake.classifier}</classifier>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cmake-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <target>all</target>
                            <!-- "targetPath" from the "generate" goal: -->
                            <projectDirectory>${project.basedir}/${cmake.binary.dir}</projectDirectory>
                            <classifier>${cmake.classifier}</classifier>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cmake-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <!-- "buildDirectory" is "targetPath" from the "generate" goal -->
                            <buildDirectory>${project.basedir}/${cmake.binary.dir}</buildDirectory>
                            <options>
                                <option>--verbose</option>
                            </options>
                            <!-- Optional way to not fail the build on test failures -->
                            <!-- <testFailureIgnore>true</testFailureIgnore> -->
                            <!-- Optional way to skip just the ctest tests -->
                            <!-- <ctest.skip.tests>true</ctest.skip.tests> -->
                            <!-- Optional/standard way to skip all Maven tests -->
                            <!-- <maven.test.skip>true</maven.test.skip> -->
                            <!-- Optional way to configure number of threads tests should use -->
                            <!-- <threadCount>2</threadCount> -->
                            <!-- Optional dashboard configuration; used with CTestConfig.cmake -->
                            <!-- <dashboard>Experimental</dashboard> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
