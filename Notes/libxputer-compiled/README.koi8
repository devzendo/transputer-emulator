                             libxputer.a v0.05

1. компиляция и инсталляция

 для компиляции необходимо иметь gcc-2.7.2-t800.8 или выше

	make
	make install

 По умолчания инсталлируется в /usr/t800/(lib|include).
 Это можно изменить в Makefile, переменная PREFIX.

2. использование
  
  В исходный текст нужно добавить "#include <xputer.h>".
  При линковке программы добавить ключ "-lxputer".
  Как работает каждая функция, как правило ясно из исходых текстов.
 
  alt имеет три способа вызова:
   1)  alt (NULL, ...) - ждать вечно  (alt)
   2)  аlt (tm, ...) и компоненты tm == 0 - совсем не ждать (alt + skip)
   3)  alt (tm, ...) и задано время - ждать указанное время (talt)
         время может быть любым, в этой реализации нет ограничения на
         переполнение таймера - раз в 76 часов для низкого приоритета и
         раз в 1.5 часа для высокого
   3a) alt (tm, NULL) - спать указанное время, так обычно в UNIX используют 
       select, т.к. у стандартной C-функции sleep аргумент измеряется только
       в секундах, что достаточно грубо

3. что не сделано

 - alt не изменяет переменную времени (так как делается в select в linux)
 - нет удобной работы с процессами (наподобие pthreads или cthreads)
 - семафоры пока сделаны тривиально и заглушечно, нет настоящей 
   эмуляции wait/signal T540/T9000 

4. предупреждение

 Будут изменения и доработки, это рабочий "срез".
 На что не нужно опираться:

 - значение переменной времени ожидания в alt при выходе нужно считать 
   неопределенным.

 - семафоры не могут разделяться процессами с разными приоритетами,
   если это все-таки хочеться, то можно делать такие вещи:
   (в низко-приоритетном процессе)

   process_tohigh ();
   semaphore_wait (...);
   process_tolow ();

   и т.д.


5. что изменилось после версии 0.04:

  - добавлен #define EVENT
  - сделан файл README -- английский вариант файла README.koi8
  - версия 0.05 публично выложена на 
    ftp://ftp.botik.ru/pub/local/roma/transputer/


961022, Роман Позлевич <roma@botik.ru>

